###############################################################################
#                                                                             #
#     IAR Assembler V7.40.3.8902/W32 for ARM 25/Oct/2015  14:08:22            #
#     Copyright 1999-2015 IAR Systems AB.                                     #
#                                                                             #
#           Source file   =  D:\projects\VehicleV2\trunk\lamps\sealib\arch\isr-stubs.s79#
#           List file     =  D:\projects\VehicleV2\trunk\lamps\sealib\list\isr-stubs.lst#
#           Object file   =  D:\projects\VehicleV2\trunk\lamps\sealib\obj\isr-stubs.o#
#           Command line  =  D:\projects\VehicleV2\trunk\lamps\sealib\arch\isr-stubs.s79 #
#                            -OD:\projects\VehicleV2\trunk\lamps\sealib\obj\  #
#                            -s+ -M<> -w+ -r                                  #
#                            -DBOARD_HEADER="hal/micro/cortexm3/stm32w108/board/MB851.h" #
#                            -DPLATFORM_HEADER="hal/micro/cortexm3/compiler/iar.h" #
#                            -DCORTEXM3 -DPHY_EM3XX -DBOARD_MB851             #
#                            -DCONFIGURATION_HEADER="app/sensor/sensor-configuration.h" #
#                            -DSINK_APP                                       #
#                            -DEMBER_SERIAL1_MODE=EMBER_SERIAL_FIFO           #
#                            -DEMBER_SERIAL1_TX_QUEUE_SIZE=128                #
#                            -DEMBER_SERIAL1_RX_QUEUE_SIZE=16                 #
#                            -DEMBER_SERIAL0_DEBUG -DSCAN_DEBUG_PRINT_ENABLE  #
#                            -DNULL_BTL                                       #
#                            -LD:\projects\VehicleV2\trunk\lamps\sealib\list\ #
#                            -t2 --cpu Cortex-M3 --fpu None                   #
#                            -ID:\projects\VehicleV2\trunk\lamps\sealib\..\..\ #
#                            -ID:\projects\VehicleV2\trunk\lamps\sealib\..\..\STACK\ #
#                            -ID:\projects\VehicleV2\trunk\lamps\sealib\..\..\HAL\ #
#                            -ID:\projects\VehicleV2\trunk\lamps\sealib\..\   #
#                            -ID:\projects\VehicleV2\trunk\lamps\sealib\..\inc\hal\ #
#                                                                             #
###############################################################################

    1                           //--------------------------------------------
                                ----------------------------------
    2                           // @file hal/micro/cortexm3/isr-stubs.s79
    3                           // @brief Stubs for all exception handlers
                                 (ISRs)
    4                           // 
    5                           // NOTE: You should NOT have to change this
                                 file to instatiate your own ISR!
    6                           //
    7                           // By providing a *weak* function here, every
                                 vector in the interrupt table is
    8                           // guaranteed to be defined.  These functions
                                 will be overridden during link
    9                           // time whenever the same function (symbol)
                                 name is used normally in another
   10                           // source file.
   11                           //
   12                           // RESULT:  Simply define whichever ISRs you
                                 need in your application and this
   13                           // file will fill in the gaps during
                                 linking.
   14                           //
   15                           // Author: Brooks Barrett
   16                           // Copyright 2007 by Ember Corporation. All
                                 rights reserved.                *80*
   17                           //--------------------------------------------
                                ----------------------------------
   18                           
   19                           //Normally the default NVIC_CONFIG file would
                                 be defined in the PLATFORM_HEADER
   20                           //but this assembly file does not include the
                                 PLATFORM_HEADER (it can't
   21                           //because this is assembly, and the header is
                                 for c).
   22                           #ifndef NVIC_CONFIG
   23                             #define NVIC_CONFIG "nvic-config.h"
   24                           #endif
   25                           #include "asm.h"
   26                           
   27                           // NOTE: Any use of white space in this file
                                 is ignored by the preprocessor.
   28                           //       Since assembly files have white space
                                 requirements, the white space
   29                           //       needed is implemented in the
                                 nvic-config.h file itself.
   30                           
   31                           #define EXCEPTION(vectorNumber, functionName,
                                 priorityLevel) \
   33                           #define PERM_EXCEPTION(vectorNumber,
                                 functionName, priorityLevel)
   34                           #include NVIC_CONFIG
   35                           #undef  PERM_EXCEPTION
   36                           #undef  EXCEPTION
   37                           
   38                           
   39                           
   40                           #define SEGMENT() \
   42                           #define SEGMENT2() \
   44                           #define EXCEPTION(vectorNumber, functionName,
                                 priorityLevel) \
   46                           #define PERM_EXCEPTION(vectorNumber,
                                 functionName, priorityLevel)
   47                           #include NVIC_CONFIG
   48                           #undef  PERM_EXCEPTION
   49                           #undef  EXCEPTION
   50                           
   51                           
   52                           // Every function defined above will reference
                                 the following code
   53                           // Since each function is still defined
                                 PUBWEAK with its own segment, the
   54                           // linker will still do it's job and stub out
                                 only the functions that need it.
   55                           // By having all the stubs reference the same
                                 code, we save 96 bytes!
   56                                   __IMPORT__ uninitializedIsr
   57    00000000 ........              B   uninitializedIsr
   58                           
   59                           
   60                                   __END__
##############################
#           CRC:0            #
#        Errors:   0         #
#        Warnings: 0         #
#          Bytes: 4          #
##############################



