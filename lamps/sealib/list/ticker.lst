###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        25/Oct/2015  14:11:38
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  D:\projects\VehicleV2\trunk\lamps\sealib\lamp\ticker.c
#    Command line =  
#        D:\projects\VehicleV2\trunk\lamps\sealib\lamp\ticker.c -D
#        ENABLE_GATEWAY -D NULL_BTL -D CORTEXM3_EM357 -lC
#        D:\projects\VehicleV2\trunk\lamps\sealib\list\ --diag_suppress Pa050
#        -o D:\projects\VehicleV2\trunk\lamps\sealib\obj\ --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I
#        D:\projects\VehicleV2\trunk\lamps\sealib\..\inc\ -I
#        D:\projects\VehicleV2\trunk\lamps\sealib\..\inc\hal\ -I
#        D:\projects\VehicleV2\trunk\lamps\sealib\..\inc\hal\cortexm3\ -I
#        D:\projects\VehicleV2\trunk\lamps\sealib\..\inc\stack\ -I
#        D:\projects\VehicleV2\trunk\lamps\sealib\..\inc\util\ -I
#        D:\projects\VehicleV2\trunk\lamps\sealib\..\inc\car\ -Ohz
#        --use_c++_inline
#    List file    =  D:\projects\VehicleV2\trunk\lamps\sealib\list\ticker.lst
#    Object file  =  D:\projects\VehicleV2\trunk\lamps\sealib\obj\ticker.o
#
###############################################################################

D:\projects\VehicleV2\trunk\lamps\sealib\lamp\ticker.c
      1          
      2          #include "network.h"
      3          #include "lamp.h"
      4          
      5          static systime_t   *  systime = NULL;
      6          
      7          /*******************************************************************************
      8          * Function Name  : TICK_Configuration ( void )
      9          * Description    : Configures System Ticker
     10          * Input          : None
     11          * Output         : None
     12          * Return         : 
     13          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     14          void TICK_Configuration ( void )
     15          {
   \                     TICK_Configuration: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     16              sea_memset(&single_info.time, 0x00, sizeof(systime_t));
   \   00000002   0x....             LDR.N    R4,??DataTable4
   \   00000004   0x220C             MOVS     R2,#+12
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x1D20             ADDS     R0,R4,#+4
   \   0000000A   0x.... 0x....      BL       sea_memset
     17              systime = &single_info.time;
   \   0000000E   0x....             LDR.N    R1,??DataTable4_1
   \   00000010   0x1D20             ADDS     R0,R4,#+4
   \   00000012   0x6048             STR      R0,[R1, #+4]
     18              
     19              //tickEvent.status = EMBER_EVENT_MS_TIME;             // EMBER_EVENT_MS_TIME;
     20              emberEventControlSetActive(millTickEvent);   
   \   00000014   0x2004             MOVS     R0,#+4
   \   00000016   0x....             LDR.N    R1,??DataTable4_2
   \   00000018   0x7008             STRB     R0,[R1, #+0]
     21              emberEventControlSetActive(secTickEvent);              // emberEventControlSetActive(minTickEvent);
   \   0000001A   0x....             LDR.N    R1,??DataTable4_3
   \   0000001C   0x7008             STRB     R0,[R1, #+0]
     22              //emberEventControlSetActive(permitJoinEvent);
     23          }
   \   0000001E   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .data, align 4
     24          
     25          
     26          /*******************************************************************************
     27          * Function Name  : millTickHook
     28          * Description    : 毫秒级事件处理 + 计时（偏慢一点点），循环
     29          * Input          : None
     30          * Output         : 
     31          * Return         : None
     32          *******************************************************************************/
     33          static u8 workhour = 0x02;
   \                     workhour:
   \   00000000   0x02               DC8 2
   \   00000001   0x00 0x00          DC8 0, 0, 0
   \              0x00         
   \   00000004   0x00000000         DC32 0H

   \                                 In section .text, align 2, keep-with-next
     34          void millTickHook ( void )
     35          {
   \                     millTickHook: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     36              sea_feedwatchdog();
   \   00000002   0x.... 0x....      BL       sea_feedwatchdog
     37              if (systime == NULL)    return;  
   \   00000006   0x....             LDR.N    R4,??DataTable4_1
   \   00000008   0x6860             LDR      R0,[R4, #+4]
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD055             BEQ.N    ??millTickHook_0
     38              
     39              if (workhour)
   \   0000000E   0x7820             LDRB     R0,[R4, #+0]
   \   00000010   0xB108             CBZ.N    R0,??millTickHook_1
     40                  msTimeEventHandler();
   \   00000012   0x.... 0x....      BL       msTimeEventHandler
     41              
     42              if (++ systime->tick >= ONESECOND)
   \                     ??millTickHook_1: (+1)
   \   00000016   0x6860             LDR      R0,[R4, #+4]
   \   00000018   0x6881             LDR      R1,[R0, #+8]
   \   0000001A   0x1C49             ADDS     R1,R1,#+1
   \   0000001C   0xF5B1 0x7F7A      CMP      R1,#+1000
   \   00000020   0x6081             STR      R1,[R0, #+8]
   \   00000022   0xD342             BCC.N    ??millTickHook_2
     43              {
     44                  systime->tick = 0x00;
   \   00000024   0x2100             MOVS     R1,#+0
   \   00000026   0x6081             STR      R1,[R0, #+8]
     45                  if (++ systime->sec >= 60)
   \   00000028   0x7981             LDRB     R1,[R0, #+6]
   \   0000002A   0x1C49             ADDS     R1,R1,#+1
   \   0000002C   0x7181             STRB     R1,[R0, #+6]
   \   0000002E   0x6860             LDR      R0,[R4, #+4]
   \   00000030   0x7981             LDRB     R1,[R0, #+6]
   \   00000032   0x293C             CMP      R1,#+60
   \   00000034   0xDB39             BLT.N    ??millTickHook_2
     46                  {
     47                      systime->sec = 0x00;                        // systime->sec - 60;
   \   00000036   0x2100             MOVS     R1,#+0
   \   00000038   0x7181             STRB     R1,[R0, #+6]
     48                      if (++ systime->min >= 60)
   \   0000003A   0x6860             LDR      R0,[R4, #+4]
   \   0000003C   0x7941             LDRB     R1,[R0, #+5]
   \   0000003E   0x1C49             ADDS     R1,R1,#+1
   \   00000040   0x7141             STRB     R1,[R0, #+5]
   \   00000042   0x6860             LDR      R0,[R4, #+4]
   \   00000044   0x7941             LDRB     R1,[R0, #+5]
   \   00000046   0x293C             CMP      R1,#+60
   \   00000048   0xDB2F             BLT.N    ??millTickHook_2
     49                      {
     50                          systime->min  = 0x04;                   // 经测试，每小时慢了4'10''
   \   0000004A   0x2104             MOVS     R1,#+4
   \   0000004C   0x7141             STRB     R1,[R0, #+5]
     51                          systime->sec += 10; 
   \   0000004E   0x6860             LDR      R0,[R4, #+4]
   \   00000050   0x7981             LDRB     R1,[R0, #+6]
   \   00000052   0x310A             ADDS     R1,R1,#+10
   \   00000054   0x7181             STRB     R1,[R0, #+6]
     52                          if (workhour)
   \   00000056   0x7820             LDRB     R0,[R4, #+0]
   \   00000058   0xB108             CBZ.N    R0,??millTickHook_3
     53                              hourTimeEventHandler();             // sea_timehourevent();
   \   0000005A   0x.... 0x....      BL       hourTimeEventHandler
     54                          if (++ systime->hour >= 24)
   \                     ??millTickHook_3: (+1)
   \   0000005E   0x6860             LDR      R0,[R4, #+4]
   \   00000060   0x7901             LDRB     R1,[R0, #+4]
   \   00000062   0x1C49             ADDS     R1,R1,#+1
   \   00000064   0x7101             STRB     R1,[R0, #+4]
   \   00000066   0x6860             LDR      R0,[R4, #+4]
   \   00000068   0x7901             LDRB     R1,[R0, #+4]
   \   0000006A   0x2918             CMP      R1,#+24
   \   0000006C   0xDB19             BLT.N    ??millTickHook_4
     55                          {
     56                              systime->hour = 0x00;
   \   0000006E   0x2100             MOVS     R1,#+0
   \   00000070   0x7101             STRB     R1,[R0, #+4]
     57                              if (++ systime->day >= 30)
   \   00000072   0x6860             LDR      R0,[R4, #+4]
   \   00000074   0x78C1             LDRB     R1,[R0, #+3]
   \   00000076   0x1C49             ADDS     R1,R1,#+1
   \   00000078   0x70C1             STRB     R1,[R0, #+3]
   \   0000007A   0x6860             LDR      R0,[R4, #+4]
   \   0000007C   0x78C1             LDRB     R1,[R0, #+3]
   \   0000007E   0x291E             CMP      R1,#+30
   \   00000080   0xDB0F             BLT.N    ??millTickHook_4
     58                              {
     59                                  systime->day = 0x00;
   \   00000082   0x2100             MOVS     R1,#+0
   \   00000084   0x70C1             STRB     R1,[R0, #+3]
     60                                  if (++ systime->mon >= 12)
   \   00000086   0x6860             LDR      R0,[R4, #+4]
   \   00000088   0x7881             LDRB     R1,[R0, #+2]
   \   0000008A   0x1C49             ADDS     R1,R1,#+1
   \   0000008C   0x7081             STRB     R1,[R0, #+2]
   \   0000008E   0x6860             LDR      R0,[R4, #+4]
   \   00000090   0x7881             LDRB     R1,[R0, #+2]
   \   00000092   0x290C             CMP      R1,#+12
   \   00000094   0xDB05             BLT.N    ??millTickHook_4
     61                                  {
     62                                      systime->mon = 0x00;
   \   00000096   0x2100             MOVS     R1,#+0
   \   00000098   0x7081             STRB     R1,[R0, #+2]
     63                                      systime->year ++;
   \   0000009A   0x6860             LDR      R0,[R4, #+4]
   \   0000009C   0x8801             LDRH     R1,[R0, #+0]
   \   0000009E   0x1C49             ADDS     R1,R1,#+1
   \   000000A0   0x8001             STRH     R1,[R0, #+0]
     64                                  }
     65                              }
     66                          }
     67                          if ((sys_info.ctrl.config | LAMP_CF_OPEN) && ~(sys_info.ctrl.config & LAMP_CF_NETWORK))   
     68                          {
     69                              if (workhour)
   \                     ??millTickHook_4: (+1)
   \   000000A2   0x7820             LDRB     R0,[R4, #+0]
   \   000000A4   0xB148             CBZ.N    R0,??millTickHook_0
     70                                  workhour --;
   \   000000A6   0x1E40             SUBS     R0,R0,#+1
   \   000000A8   0x7020             STRB     R0,[R4, #+0]
     71                          }
     72                      }
     73                  }
     74              }
     75              
     76              if (workhour)
   \                     ??millTickHook_2: (+1)
   \   000000AA   0x7820             LDRB     R0,[R4, #+0]
   \   000000AC   0xB128             CBZ.N    R0,??millTickHook_0
     77                  emberEventControlSetDelayMS(millTickEvent, 0x01);
   \   000000AE   0xE8BD 0x4010      POP      {R4,LR}
   \   000000B2   0x2101             MOVS     R1,#+1
   \   000000B4   0x....             LDR.N    R0,??DataTable4_2
   \   000000B6   0x.... 0x....      B.W      emEventControlSetDelayMS
     78          }
   \                     ??millTickHook_0: (+1)
   \   000000BA   0xBD10             POP      {R4,PC}          ;; return
     79          
     80          /*******************************************************************************
     81          * Function Name  : secTickHook ( void )
     82          * Description    : 秒级事件处理程序,循环
     83          * Input          : None
     84          * Output         : None
     85          * Return         : None
     86          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     87          void secTickHook ( void )
     88          {
   \                     secTickHook: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     89              secTimeEventHandler();
   \   00000002   0x.... 0x....      BL       secTimeEventHandler
     90              emberEventControlSetDelayQS(secTickEvent, 0x04);   // 250ms x 4, // single_info.period second event 
   \   00000006   0xE8BD 0x4004      POP      {R2,LR}
   \   0000000A   0x2104             MOVS     R1,#+4
   \   0000000C   0x....             LDR.N    R0,??DataTable4_3
   \   0000000E   0x.... 0x....      B.W      emEventControlSetDelayQS
     91          }
     92          
     93          /*******************************************************************************
     94          * Function Name  : void sea_getsystime ( systime_t * time )
     95          * Description    : Inserts a delay time.
     96          * Input          : nTime: specifies the delay time length, in milliseconds.
     97          * Output         : None
     98          * Return         : None
     99          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    100          void sea_getsystime ( systime_t * time )
    101          {
    102              if (systime == NULL)     
   \                     sea_getsystime: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable4_1
   \   00000002   0x684A             LDR      R2,[R1, #+4]
   \   00000004   0xB11A             CBZ.N    R2,??sea_getsystime_0
    103                  return;
    104              sea_memcpy((char *)time, (char *)&systime, sizeof(systime_t));
   \   00000006   0x220C             MOVS     R2,#+12
   \   00000008   0x1D09             ADDS     R1,R1,#+4
   \   0000000A   0x.... 0x....      B.W      sea_memcpy
   \                     ??sea_getsystime_0: (+1)
   \   0000000E   0x4770             BX       LR               ;; return
    105          }
    106          
    107          /*******************************************************************************
    108          * Function Name  : u32  sea_getinterval ( systime_t time )
    109          * Description    : Inserts a delay time. 计算经过了多长的时间间隔；
    110          * Input          : nTime: specifies the delay time length, in milliseconds.
    111          * Output         : None
    112          * Return         : None
    113          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    114          u32  sea_getinterval ( systime_t time )
    115          {
   \                     sea_getinterval: (+1)
   \   00000000   0x....             LDR.N    R3,??DataTable4_1
   \   00000002   0x685B             LDR      R3,[R3, #+4]
   \   00000004   0xB90B             CBNZ.N   R3,??sea_getinterval_0
    116              if (systime == NULL)     
    117                  return 0x00L;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x4770             BX       LR
    118              return systime->tick - time.tick;
   \                     ??sea_getinterval_0: (+1)
   \   0000000A   0x689B             LDR      R3,[R3, #+8]
   \   0000000C   0x1A98             SUBS     R0,R3,R2
   \   0000000E   0x4770             BX       LR               ;; return
    119          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     single_info

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     workhour

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     millTickEvent

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     secTickEvent
    120          
    121          #if 0   // 移植不用 in em3018 or em3118, only for em260.
    122          /*******************************************************************************
    123          * Function Name  : void sea_setimevent ( u8 index, u16 time, TMHANDLE handle )
    124          * Description    : set time event and function
    125          * Input          : u16 time, TMHANDLE handle
    126          * Output         : None
    127          * Return         : None
    128          *******************************************************************************/
    129          void sea_setimevent ( u8 index, u16 time, TMHANDLE handle )
    130          {
    131              if (index >= MAXTIMEVENT)
    132                  return;
    133              
    134              time_event[index].time = time;
    135              if (time < 0x02)
    136                  time_event[index].time = 0x02;
    137              time_event[index].handle = handle;
    138          }
    139          
    140          /*******************************************************************************
    141          * Function Name  : void TICK_Disabled ( void )
    142          * Description    : disable System Ticker
    143          * Input          : None
    144          * Output         : None
    145          * Return         : None
    146          *******************************************************************************/
    147          static void TICK_Disable ( void )
    148          {
    149              SysTick_CounterCmd(SysTick_Counter_Disable);
    150          }
    151          
    152          /*******************************************************************************
    153          * Function Name  : void TICK_Enable ( void )
    154          * Description    : enable System Ticker
    155          * Input          : None
    156          * Output         : None
    157          * Return         : None
    158          *******************************************************************************/
    159          static void TICK_Enable ( void )
    160          {
    161              SysTick_CounterCmd(SysTick_Counter_Enable);
    162          }
    163          
    164          /*******************************************************************************
    165          * Function Name  : void sea_delayms ( u32 time )
    166          * Description    : Inserts a delay time.
    167          * Input          : time: specifies the delay time length, in milliseconds.
    168          * Output         : None
    169          * Return         : None
    170          *******************************************************************************/
    171          void sea_delayms ( u32 time )
    172          {
    173              u32 tick = systime->tick;
    174          
    175              if (systime == NULL)     return;
    176              while (time --)          // 要延时的毫秒数
    177              {
    178          	while (tick == systime->tick) 
    179                  {
    180                      extern void delay ();
    181                      u32 cnt = SysTick_GetCounter();
    182                      delay(0x01);
    183                      if (cnt == SysTick_GetCounter())
    184                          break;
    185                  }
    186          	tick = systime->tick;
    187              }
    188              SysTick_CounterCmd(SysTick_Counter_Clear);     // Clear SysTick Counter 
    189          }
    190          
    191          /*******************************************************************************
    192          * Function Name  : halTimer1Isr ( void )
    193          * Description    : TIM1中断服务程序;
    194          * Input          : None
    195          * Output         : None
    196          * Return         : None
    197          *******************************************************************************/
    198          void halTimer1Isr ( void )
    199          { 
    200          //    INT_CFGSET &= ~INT_TIM1;   // stop the interrupts
    201              
    202              TimingTickHook();  
    203          //    INT_TIM1FLAG = 0xffffffff; // clear interrupt
    204              TIM1_CNT    = 0x00;
    205              TIM1_ARR    = TICKCNT;     // 417 = 1ms  417000
    206          //    INT_TIM1CFG = INT_TIMUIF;  // enable the Timer 1, CNT ?= TOP interrupt  (Update interrupt enable)
    207          //    INT_CFGSET |= INT_TIM1;    // enable top level timer interrupts
    208          }
    209          #endif
    210          
    211          ///////////////////////////////////////////////////////////////////////////////////////

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   TICK_Configuration
         8   -> sea_memset
       8   millTickHook
         8   -> hourTimeEventHandler
         8   -> msTimeEventHandler
         8   -> sea_feedwatchdog
       0   sea_getinterval
       0   sea_getsystime
       8   secTickHook
         0   -> emEventControlSetDelayQS
         8   -> secTimeEventHandler


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
      32  TICK_Configuration
     188  millTickHook
      16  sea_getinterval
      16  sea_getsystime
      18  secTickHook
       8  workhour
          systime

 
   8 bytes in section .data
 286 bytes in section .text
 
 286 bytes of CODE memory
   8 bytes of DATA memory

Errors: none
Warnings: none
